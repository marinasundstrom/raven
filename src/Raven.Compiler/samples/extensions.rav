import System.Console.*
import System.Collections.Generic.*

let items = List<int>()
items.Add(1)
items.Add(2)
let count = items.CountItems()
let sum = items.SumNumbers()

WriteLine("Count: ${count}");
WriteLine("Sum: ${sum}");

items.CountPlusOne = 5
let value = items.CountPlusOne

WriteLine("Value: ${value}");

extension MyEnumerableExt<T> for IEnumerable<T> {
    CountItems() -> int {
        var total: int = 0
        for each in self {
            total = total + 1
        }
        return total
    }
}

extension MyIntEnumerableExt for IEnumerable<int> {
    SumNumbers() -> int {
        var sum: int = 0
        for each x in self {
            sum = sum + x
        }
        return sum
    }
}

extension ListExt for List<int> {
    CountPlusOne: int {
        get => self.Count + 1
        set => self.Add(value)
    }
}