/*
 * WIP
 * */
 
//namespace Test

import System.Console.*
import System.Collections.Generic.List<>
alias StringList = System.Collections.Generic.List<string>
alias PrintLine = System.Console.WriteLine

WriteLine("Hello"); let x = 2

let user = Person(42)
user.AddRole("admin")

let user2 = Person.WithName("John")
    .AddRole("admin");

PrintLine(user2.Name)

user2(2003);
user2("test");

class Person {
    let species = "Homo sapiens"
    var age: int = 0
    var name: string
    var roles: StringList = []

    // Primary constructor
    public init(age: int) {
        self.age = age
    }

    // Named constructor
    public init WithName(name: string) {
        self.name = name
    }

    // Regular method
    public AddRole(role: string) -> Person {
        roles.Add(role)
        self
    }

    // public Test() -> int => 2

    // Computed property
    public Name: string {
        get {
            name
        }
        set {
            name = value
        }
    }

    // Indexer: e.g., person[0]
    public self[index: int]: string {
        get => roles[index];
        set => roles[index] = value
    }

    // Invocation operator: e.g., person(2025)
    public self(year: int) -> string {
        "Name: ${name}, Age in ${year}: ${year - (System.DateTime.Now.Year - age)}"
    }

    public self(str: string) {

    }
}